import UIKit


var sharedValue: Int = 0

let thread1 = DispatchQueue.global(qos: .userInitiated)
let thread2 = DispatchQueue.global(qos: .utility)

let semaphore = DispatchSemaphore(value: 1)

func enterCriticalSection(from queue: DispatchQueue, symbol: String) {
    queue.async {
        print("\(symbol) wait")
        semaphore.wait()
        
        for i in 0..<5 {
            sharedValue += 1
            print("\(symbol) \(sharedValue)")
        }
        
        print("\(symbol) signal")
        semaphore.signal()
    }
}

enterCriticalSection(from: thread2, symbol: "ðŸ’š")
enterCriticalSection(from: thread1, symbol: "ðŸ’™")

/**
 results:
 ðŸ’™ wait
 ðŸ’š wait
 ðŸ’™ 1
 ðŸ’™ 2
 ðŸ’™ 3
 ðŸ’™ 4
 ðŸ’™ 5
 ðŸ’™ signal
 ðŸ’š 6
 ðŸ’š 7
 ðŸ’š 8
 ðŸ’š 9
 ðŸ’š 10
 ðŸ’š signal
 */
